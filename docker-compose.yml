version: '3.8'

services:
  # Default Node.js bot (existing)
  claude-bot:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile.claude-bot
    volumes:
      - bot-data:/bot/data
      - bot-logs:/bot/logs
      # Mount SSH config from host (read-only)
      - ~/.ssh:/home/bot/.ssh:ro
    environment:
      # Required: API keys and tokens
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      
      # Git configuration
      - GIT_AUTHOR_NAME=${GIT_AUTHOR_NAME:-Claude Bot}
      - GIT_AUTHOR_EMAIL=${GIT_AUTHOR_EMAIL:-claude-bot@example.com}
      - GIT_COMMITTER_NAME=${GIT_COMMITTER_NAME:-Claude Bot}
      - GIT_COMMITTER_EMAIL=${GIT_COMMITTER_EMAIL:-claude-bot@example.com}
      
      # Bot configuration
      - TARGET_REPO=${TARGET_REPO}
      - BOT_LABEL=${BOT_LABEL:-claude-bot}
      - BOT_ID=${BOT_ID:-claude-bot-nodejs}
      - ISSUE_CHECK_INTERVAL=${ISSUE_CHECK_INTERVAL:-15}
      - PR_CHECK_INTERVAL=${PR_CHECK_INTERVAL:-30}
      
      # Status reporting
      - STATUS_WEB_URL=http://claude-status-web:5000
    command: start-bot.sh
    working_dir: /bot
    restart: unless-stopped
    container_name: claude-bot
    profiles: ["nodejs", "default"]

  # .NET 8 + Node.js 10.13 bot (independent)
  claude-bot-dotnet:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile.dotnet
    volumes:
      - bot-data-dotnet:/bot/data
      - bot-logs-dotnet:/bot/logs
      # Mount SSH config from host (read-only)
      - ~/.ssh:/home/bot/.ssh:ro
      # .NET specific caches
      - dotnet-nuget-cache:/home/bot/.nuget/packages
      - dotnet-tools-cache:/home/bot/.dotnet/tools
      - npm-cache:/home/bot/.npm
    environment:
      # Required: API keys and tokens
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      
      # Git configuration
      - GIT_AUTHOR_NAME=${GIT_AUTHOR_NAME:-Claude Bot}
      - GIT_AUTHOR_EMAIL=${GIT_AUTHOR_EMAIL:-claude-bot@example.com}
      - GIT_COMMITTER_NAME=${GIT_COMMITTER_NAME:-Claude Bot}
      - GIT_COMMITTER_EMAIL=${GIT_COMMITTER_EMAIL:-claude-bot@example.com}
      
      # Bot configuration
      - TARGET_REPO=${DOTNET_TARGET_REPO}
      - BOT_LABEL=${DOTNET_BOT_LABEL:-claude-bot}
      - BOT_ID=${DOTNET_BOT_ID:-claude-bot-dotnet}
      - ISSUE_CHECK_INTERVAL=${ISSUE_CHECK_INTERVAL:-15}
      - PR_CHECK_INTERVAL=${PR_CHECK_INTERVAL:-30}
      
      # Status reporting
      - STATUS_WEB_URL=http://claude-status-web:5000
      
      # .NET specific environment
      - DOTNET_ENVIRONMENT=Development
      - ASPNETCORE_ENVIRONMENT=Development
      - NODE_ENV=development
      - NODE_VERSION=10.13
    command: start-bot.sh
    working_dir: /bot
    restart: unless-stopped
    container_name: claude-bot-dotnet
    ports:
      - "5000:5000"  # .NET HTTP
      - "5001:5001"  # .NET HTTPS
      - "3000:3000"  # Node.js dev server
    profiles: ["dotnet"]

  # Status Web Dashboard
  status-web:
    build:
      context: ./status-web
      dockerfile: Dockerfile
    ports:
      - "8080:5000"  # Status dashboard
    volumes:
      - status-data:/app/data
    environment:
      - FLASK_ENV=production
      - STATUS_DATA_DIR=/app/data
    restart: unless-stopped
    container_name: claude-status-web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  bot-data:
  bot-logs:
  bot-data-dotnet:
  bot-logs-dotnet:
  dotnet-nuget-cache:
  dotnet-tools-cache:
  npm-cache:
  status-data: