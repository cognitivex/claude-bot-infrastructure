# Multi-stage Dockerfile for .NET 8 + Node.js 10.13 projects
# This allows Claude to run independently with both runtimes

# Stage 1: .NET 8 SDK with Node.js 10.13
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS dotnet-node-base

# Install Node.js 10.13 using NodeSource binary
ENV NODE_VERSION=10.13.0
RUN apt-get update && apt-get install -y xz-utils \
    && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz" \
    && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \
    && rm "node-v$NODE_VERSION-linux-x64.tar.xz" \
    && ln -s /usr/local/bin/node /usr/local/bin/nodejs \
    && npm install -g npm@6.4.1

# Install system dependencies for bot operations
RUN apt-get update && apt-get install -y \
    git \
    bash \
    curl \
    python3 \
    python3-pip \
    openssh-client \
    jq \
    && rm -rf /var/lib/apt/lists/*

# Install GitHub CLI
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && apt-get update \
    && apt-get install gh -y

# Create non-root user
ARG USERNAME=bot
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME 2>/dev/null || \
    (getent group $USER_GID >/dev/null && groupadd $USERNAME) || \
    groupadd $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME 2>/dev/null || \
    (id $USER_UID >/dev/null 2>&1 && usermod -l $USERNAME -d /home/$USERNAME $(id -nu $USER_UID)) || \
    useradd --gid $USERNAME -m $USERNAME \
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# Create bot directories and workspace
RUN mkdir -p /bot/data /bot/scripts /bot/logs /bot/config /workspace \
    && chown -R $USERNAME:$USERNAME /bot /workspace

# Install Node.js 18 using NodeSource for Claude Code
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g @anthropic-ai/claude-code \
    && mv /usr/bin/node /usr/bin/node18 \
    && mv /usr/bin/npm /usr/bin/npm18 \
    && ln -sf /usr/local/bin/node /usr/bin/node \
    && ln -sf /usr/local/bin/npm /usr/bin/npm

# Create Claude wrapper that uses Node 18
RUN echo '#!/bin/bash\n/usr/bin/node18 /usr/lib/node_modules/@anthropic-ai/claude-code/dist/index.js "$@"' > /usr/local/bin/claude \
    && chmod +x /usr/local/bin/claude

# Install Python packages for automation
RUN pip3 install --no-cache-dir --break-system-packages \
    requests \
    pyyaml \
    python-dotenv \
    schedule

# Install common .NET tools
RUN dotnet tool install --global dotnet-ef \
    && dotnet tool install --global dotnet-aspnet-codegenerator

# Create entrypoint script (as root)
RUN echo '#!/bin/bash\n# Ensure Claude uses Node 18 while project uses Node 10.13\nexport CLAUDE_NODE_PATH="/usr/bin/node18"\nexec "$@"' > /usr/local/bin/entrypoint.sh \
    && chmod +x /usr/local/bin/entrypoint.sh

# Switch to non-root user
USER $USERNAME

# Set up dotnet tools path
ENV PATH="/home/$USERNAME/.dotnet/tools:${PATH}"

# Set working directory  
WORKDIR /bot

# Set default Node.js version for project work (10.13)
ENV PATH="/usr/bin:${PATH}"
ENV NODE_VERSION=10.13

# Copy bot scripts into container
COPY --chown=$USERNAME:$USERNAME scripts/ /bot/scripts/
COPY --chown=$USERNAME:$USERNAME config/ /bot/config/

# Add bot scripts directory to PATH
ENV PATH="/bot/scripts:${PATH}"

# Create initial bot data directories
RUN mkdir -p /bot/data/tasks /bot/data/queue /bot/data/processed /bot/data/pr_feedback

# Ensure Claude Code can access Node 18 when needed
ENV CLAUDE_NODE_PATH="/usr/bin/node"


ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["bash"]